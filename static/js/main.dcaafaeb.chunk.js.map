{"version":3,"sources":["components/Error.js","components/Pregunta.js","components/Formulario.js","components/Gasto.js","components/Listado.js","Helpers.js","components/ControlPresupuesto.js","App.js","reportWebVitals.js","index.js"],"names":["Error","mensaje","className","Pregunta","guardarPresupuesto","guardarRestante","actualizarPregunta","useState","cantidad","guardarCantidad","error","guardarError","action","onSubmit","e","preventDefault","isNaN","type","placeholder","onChange","parseInt","target","value","Formulario","guardarGasto","guardarCrearGasto","nombre","guardarNombre","trim","gasto","id","shortid","generate","mensanje","Gasto","Listado","gastos","map","revisarPresupuesto","presupuesto","restante","ControlPresupuesto","App","mostrarPregunta","guardarGastos","crearGasto","useEffect","presupuestoRestante","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wMAGaA,EAAQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,mBAAGC,UAAU,2BAAb,SAAyCD,KCA9BE,EAAW,SAAC,GAIlB,IAHLC,EAGI,EAHJA,mBACAC,EAEI,EAFJA,gBACAC,EACI,EADJA,mBAGA,EAAoCC,mBAAS,GAA7C,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8BF,mBAAS,GAAvC,mBAAOG,EAAP,KAAcC,EAAd,KAwBA,OACE,eAAC,WAAD,WACE,uDACCD,EAAQ,cAAC,EAAD,CAAOT,QAAQ,iCAAoC,KAC5D,uBAAMW,OAAO,GAAGC,SApBO,SAACC,GAC1BA,EAAEC,iBAGEP,EAAW,GAAKQ,MAAMR,GACxBG,GAAa,IAKfA,GAAa,GACbP,EAAmBI,GACnBH,EAAgBG,GAChBF,GAAmB,KAOjB,UACE,uBACEW,KAAK,SACLf,UAAU,eACVgB,YAAY,wBACZC,SA9BmB,SAACL,GAC1BL,EAAgBW,SAASN,EAAEO,OAAOC,MAAO,QAgCrC,uBACEL,KAAK,SACLf,UAAU,8BACVoB,MAAM,+B,gBC7CHC,EAAa,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,aAAcC,EAAwB,EAAxBA,kBACzC,EAAgClB,mBAAS,IAAzC,mBAAOmB,EAAP,KAAeC,EAAf,KACA,EAAoCpB,mBAAS,GAA7C,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAcC,EAAd,KA4BA,OACE,uBAAMC,OAAO,GAAGC,SA1BG,SAACC,GAIpB,GAHAA,EAAEC,iBAGEP,EAAW,GAAKQ,MAAMR,IAA+B,KAAlBkB,EAAOE,OAC5CjB,GAAa,OADf,CAIAA,GAAa,GAGb,IAAMkB,EAAQ,CACZH,SACAlB,WACAsB,GAAIC,IAAQC,YAIdR,EAAaK,GACbJ,GAAkB,GAElBE,EAAc,IACdlB,EAAgB,KAIhB,UACE,2DACCC,EACC,cAAC,EAAD,CAAOuB,SAAS,2DACd,KACJ,sBAAK/B,UAAU,QAAf,UACE,iDACA,uBACEe,KAAK,OACLf,UAAU,eACVgB,YAAY,iBACZI,MAAOI,EACPP,SAAU,SAACL,GAAD,OAAOa,EAAcb,EAAEO,OAAOC,aAG5C,sBAAKpB,UAAU,QAAf,UACE,mDACA,uBACEe,KAAK,SACLf,UAAU,eACVgB,YAAY,UACZI,MAAOd,EACPW,SAAU,SAACL,GAAD,OAAOL,EAAgBW,SAASN,EAAEO,OAAOC,OAAQ,UAG/D,uBACEL,KAAK,SACLf,UAAU,8BACVoB,MAAM,sBC9DDY,EAAQ,SAAC,GAAe,IAAbL,EAAY,EAAZA,MACtB,OACE,oBAAI3B,UAAU,SAAd,SACE,8BACG2B,EAAMH,OACP,uBAAMxB,UAAU,QAAhB,eAA2B2B,EAAMrB,kBCJ5B2B,EAAU,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACxB,OACE,sBAAKlC,UAAU,oBAAf,UACE,yCACCkC,EAAOC,KAAI,SAACR,GAAD,OACV,cAAC,EAAD,CAAsBA,MAAOA,GAAjBA,EAAMC,WCTbQ,EAAqB,SAACC,EAAaC,GAS9C,OAPID,EAAc,EAAIC,EACZ,qBACCD,EAAc,EAAIC,EACnB,sBAEA,uBCHCC,EAAqB,SAAC,GAA+B,IAA7BF,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SAChD,OACE,eAAC,WAAD,WACE,sBAAKtC,UAAU,sBAAf,4BAAqDqC,KACrD,sBAAKrC,UAAWoC,EAAmBC,EAAaC,GAAhD,yBACeA,EAAU,WCwDhBE,MA3Df,WAEE,MAA0CnC,mBAAS,GAAnD,mBAAOgC,EAAP,KAAoBnC,EAApB,KACA,EAAoCG,mBAAS,GAA7C,mBAAOiC,EAAP,KAAiBnC,EAAjB,KACA,EAA8CE,oBAAS,GAAvD,mBAAOoC,EAAP,KAAwBrC,EAAxB,KACA,EAAgCC,mBAAS,IAAzC,mBAAO6B,EAAP,KAAeQ,EAAf,KACA,EAA8BrC,mBAAS,IAAvC,mBAAOsB,EAAP,KAAcL,EAAd,KACA,EAAwCjB,oBAAS,GAAjD,mBAAOsC,EAAP,KAAmBpB,EAAnB,KAkBA,OAdAqB,qBAAU,WACR,GAAID,EAAY,CAEdD,EAAc,GAAD,mBAAKR,GAAL,CAAaP,KAG1B,IAAMkB,EAAsBP,EAAWX,EAAMrB,SAC7CH,EAAgB0C,GAGhBtB,GAAkB,MAEnB,CAACI,EAAOgB,EAAYT,EAAQI,IAG7B,qBAAKtC,UAAU,YAAf,SACE,mCACE,+CACA,qBAAKA,UAAU,gCAAf,SACGyC,EACC,cAAC,EAAD,CACEvC,mBAAoBA,EACpBC,gBAAiBA,EACjBC,mBAAoBA,IAGtB,sBAAKJ,UAAU,MAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,cAAC,EAAD,CACEsB,aAAcA,EACdC,kBAAmBA,MAGvB,sBAAKvB,UAAU,kBAAf,UACE,cAAC,EAAD,CAASkC,OAAQA,IACjB,cAAC,EAAD,CACEG,YAAaA,EACbC,SAAUA,kBC1CbQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.dcaafaeb.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const Error = ({ mensaje }) => (\n  <p className=\"alert alert-danger error\">{mensaje}</p>\n);\n\nError.propTypes = {\n  mensaje: PropTypes.string.isRequired,\n};\n","import React, { Fragment, useState } from \"react\";\nimport { Error } from \"./Error\";\nimport PropTypes from \"prop-types\";\n\nexport const Pregunta = ({\n  guardarPresupuesto,\n  guardarRestante,\n  actualizarPregunta,\n}) => {\n  // definir el state\n  const [cantidad, guardarCantidad] = useState(0);\n  const [error, guardarError] = useState(0);\n\n  //   Función que lee el presupuesto\n  const definirPresupuesto = (e) => {\n    guardarCantidad(parseInt(e.target.value, 10));\n  };\n\n  //  Submit para definir el presupuesto\n  const agregarPresupuesto = (e) => {\n    e.preventDefault();\n\n    //    Validar\n    if (cantidad < 1 || isNaN(cantidad)) {\n      guardarError(true);\n      return;\n    }\n\n    // Si se pasa la validación\n    guardarError(false);\n    guardarPresupuesto(cantidad);\n    guardarRestante(cantidad);\n    actualizarPregunta(false);\n  };\n\n  return (\n    <Fragment>\n      <h2>Coloca tu presupuesto</h2>\n      {error ? <Error mensaje=\"El Presupuesto es Incorrecto\" /> : null}\n      <form action=\"\" onSubmit={agregarPresupuesto}>\n        <input\n          type=\"number\"\n          className=\"u-full-width\"\n          placeholder=\"Coloca tu presupuesto\"\n          onChange={definirPresupuesto}\n        />\n\n        <input\n          type=\"submit\"\n          className=\"button-primary u-full-width\"\n          value=\"Definir Presupuesto\"\n        />\n      </form>\n    </Fragment>\n  );\n};\n\nPregunta.propTypes = {\n  guardarPresupuesto: PropTypes.func.isRequired,\n  guardarRestante: PropTypes.func.isRequired,\n  actualizarPregunta: PropTypes.func.isRequired,\n};\n","import React, { useState } from \"react\";\nimport { Error } from \"./Error\";\nimport shortid from \"shortid\";\nimport PropTypes from \"prop-types\";\n\nexport const Formulario = ({ guardarGasto, guardarCrearGasto }) => {\n  const [nombre, guardarNombre] = useState(\"\");\n  const [cantidad, guardarCantidad] = useState(0);\n  const [error, guardarError] = useState(false);\n\n  //   Cuando el usuario agrega un gasto\n  const agregarGasto = (e) => {\n    e.preventDefault();\n\n    // Validar\n    if (cantidad < 1 || isNaN(cantidad) || nombre.trim() === \"\") {\n      guardarError(true);\n      return;\n    }\n    guardarError(false);\n\n    // Construir el gasto\n    const gasto = {\n      nombre,\n      cantidad,\n      id: shortid.generate(),\n    };\n\n    // Pasar el gasto\n    guardarGasto(gasto);\n    guardarCrearGasto(true);\n    // Resetear el form\n    guardarNombre(\"\");\n    guardarCantidad(0);\n  };\n\n  return (\n    <form action=\"\" onSubmit={agregarGasto}>\n      <h2>Agrega tus gastos aquí</h2>\n      {error ? (\n        <Error mensanje=\"Ambos campos son obligatorios o Presupuesto Incorrecto\" />\n      ) : null}\n      <div className=\"campo\">\n        <label>Nombre Gasto</label>\n        <input\n          type=\"text\"\n          className=\"u-full-width\"\n          placeholder=\"Ej. Transporte\"\n          value={nombre}\n          onChange={(e) => guardarNombre(e.target.value)}\n        />\n      </div>\n      <div className=\"campo\">\n        <label>Cantidad Gasto</label>\n        <input\n          type=\"number\"\n          className=\"u-full-width\"\n          placeholder=\"Ej. 300\"\n          value={cantidad}\n          onChange={(e) => guardarCantidad(parseInt(e.target.value), 10)}\n        />\n      </div>\n      <input\n        type=\"submit\"\n        className=\"button-primary u-full-width\"\n        value=\"Agregar Gasto\"\n      />\n    </form>\n  );\n};\n\nFormulario.propTypes = {\n  guardarGasto: PropTypes.func.isRequired,\n  guardarCrearGasto: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const Gasto = ({ gasto }) => {\n  return (\n    <li className=\"gastos\">\n      <p>\n        {gasto.nombre}\n        <span className=\"gasto\">$ {gasto.cantidad}</span>\n      </p>\n    </li>\n  );\n};\n\nGasto.propTypes = {\n  gasto: PropTypes.object.isRequired,\n};\n","import React from \"react\";\nimport { Gasto } from \"./Gasto\";\nimport PropTypes from \"prop-types\";\n\nexport const Listado = ({ gastos }) => {\n  return (\n    <div className=\"gastos-realizados\">\n      <h2>Listado</h2>\n      {gastos.map((gasto) => (\n        <Gasto key={gasto.id} gasto={gasto} />\n      ))}\n    </div>\n  );\n};\n\nListado.propTypes = {\n  gastos: PropTypes.array.isRequired,\n};\n","export const revisarPresupuesto = (presupuesto, restante) => {\n  let clase;\n  if (presupuesto / 4 > restante) {\n    clase = \"alert alert-danger\";\n  } else if (presupuesto / 2 > restante) {\n    clase = \"alert alert-warning\";\n  } else {\n    clase = \"alert alert-success\";\n  }\n  return clase;\n};\n","import React, { Fragment } from \"react\";\nimport { revisarPresupuesto } from \"../Helpers\";\nimport PropTypes from \"prop-types\";\n\nexport const ControlPresupuesto = ({ presupuesto, restante }) => {\n  return (\n    <Fragment>\n      <div className=\"alert alert-primary\">Presupuesto: $ {presupuesto}</div>\n      <div className={revisarPresupuesto(presupuesto, restante)}>\n        Restante: $ {restante}{\" \"}\n      </div>\n    </Fragment>\n  );\n};\n\nControlPresupuesto.propTypes = {\n  presupuesto: PropTypes.number.isRequired,\n  restante: PropTypes.number.isRequired,\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Pregunta } from \"./components/Pregunta\";\nimport { Formulario } from \"./components/Formulario\";\nimport { Listado } from \"./components/Listado\";\nimport { ControlPresupuesto } from \"./components/ControlPresupuesto\";\n\nfunction App() {\n  // Definir el state\n  const [presupuesto, guardarPresupuesto] = useState(0);\n  const [restante, guardarRestante] = useState(0);\n  const [mostrarPregunta, actualizarPregunta] = useState(true);\n  const [gastos, guardarGastos] = useState([]);\n  const [gasto, guardarGasto] = useState({});\n  const [crearGasto, guardarCrearGasto] = useState(false);\n\n  // UseEffect que actualiza el restante\n\n  useEffect(() => {\n    if (crearGasto) {\n      // Agrega el nuevo presupuesto\n      guardarGastos([...gastos, gasto]);\n\n      // Resta del presupuesto actual\n      const presupuestoRestante = restante - gasto.cantidad;\n      guardarRestante(presupuestoRestante);\n\n      // Resetear a false\n      guardarCrearGasto(false);\n    }\n  }, [gasto, crearGasto, gastos, restante]);\n\n  return (\n    <div className=\"container\">\n      <header>\n        <h1>Gasto Semanal</h1>\n        <div className=\"contenido-principal contenido\">\n          {mostrarPregunta ? (\n            <Pregunta\n              guardarPresupuesto={guardarPresupuesto}\n              guardarRestante={guardarRestante}\n              actualizarPregunta={actualizarPregunta}\n            />\n          ) : (\n            <div className=\"row\">\n              <div className=\"one-half column\">\n                <Formulario\n                  guardarGasto={guardarGasto}\n                  guardarCrearGasto={guardarCrearGasto}\n                />\n              </div>\n              <div className=\"one-half column\">\n                <Listado gastos={gastos} />\n                <ControlPresupuesto\n                  presupuesto={presupuesto}\n                  restante={restante}\n                />\n              </div>\n            </div>\n          )}\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}